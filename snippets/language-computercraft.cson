".source.computercraft":
  BSoD:
    prefix: "function main"
    body: '''
      
      -- Program functions...
      
      local function main(...)
      	-- Code here...
      end
      
      -- Run
      local args = {...}
      local _, err = pcall(function() main(unpack(args)) end)
      if err then
      	-- Make a nice error handling screen here...
      	term.setBackgroundColor(colors.black)
      	term.setTextColor(colors.white)
      	term.clear()
      	term.setCursorPos(1, 3)
      	print(" An Error Has Occured! D:\\n\\n")
      	print(" " .. tostring(err) .. "\\n\\n")
      	print(" Press any key to exit...")
      	os.pullEvent("key")
      end
      
    '''
  "Center Print Function":
    prefix: "function centerPrint"
    body: '''
      local function centerPrint(text, ny)
      	if type(text) == "table" then
      		for _,v in pairs(text) do
      			centerPrint(v)
      		end
      	else
      		local _,y = term.getCursorPos()
      		local w,h = term.getSize()
      		term.setCursorPos(math.ceil((w-#text)/2), ny or y)
      		print(text)
      	end
      end
    '''
  "Clear the Screen":
    prefix: "term.clear"
    body: '''
      local function clear()
        if term.isColor and term.isColor() then
          term.setBackgroundColor(${1:colors.black})
      	term.setTextColor(${2:colors.white})
        end
        term.clear()
        term.setCursorPos(${3:1}, ${4:1})
      end
    '''
  "for i, v in ipairs()":
    prefix: "fori"
    body: '''
      for ${1:i}, ${2:v} in ipairs(${3:table_name}) do
      	${0:-- Code here...}
      end
    '''
  "for i = 1, 10":
    prefix: "for"
    body: '''
      for ${1:i} = ${2:1}, ${3:10} do
      	${0:-- Code here...}
      end
    '''
  "for k, v in pairs()":
    prefix: "forp"
    body: '''
      for ${1:k}, ${2:v} in pairs(${3:table_name}) do
      	${0:-- Code here...}
      end
    '''
  function:
    prefix: "function"
    body: '''
      function ${1:function_name}(${2:...})
      	${0:-- Code here...}
      end
    '''
  "if var == val then":
    prefix: "if"
    body: '''
      
      		if ${1:var} == ${2:val} then
      		${0:-- Code here...}
      	end
    '''
  "Is Advanced Computer":
    prefix: "term.isCol"
    body: "term.isColor and term.isColor()"
  "local x = 1":
    prefix: "local"
    body: "local ${1:x} = ${0:1}"
